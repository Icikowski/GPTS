name: Tests, coverage & code quality
on:
  push:
    branches:
      - master
      - dev
    paths:
      - "application/**"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "application/**"

jobs:
  tests:
    name: Tests and coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2 
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Perform tests
        working-directory: application
        run: make test
      - name: Prepare coverage report
        working-directory: application
        run: make coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v2.2.4
        with:
          path: "application/cover.out"
  codecov:
    name: Codecov
    runs-on: ubuntu-latest
    needs: [tests]
    if: (needs.tests.result == 'success')
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2 
      - name: Download coverage report
        uses: actions/download-artifact@v2.0.10
      - name: Prepare coverage report
        run: cp artifact/cover.out application/coverage.txt
      - name: Upload coverage report to Codecov
        working-directory: application
        run: bash <(curl -s https://codecov.io/bash)
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [tests]
    if: (needs.tests.result == 'success')
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@v2.0.10
      - name: Prepare adjusted coverage report
        run: cat artifact/cover.out | sed 's/icikowski.pl\/gpts/application/' | tee application/cover.out
      - name: Perform SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.go.coverage.reportPaths=application/cover.out
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}