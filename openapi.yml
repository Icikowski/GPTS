openapi: "3.0.3"

info:
  title: GPTS - General Purpose Test Service
  description: Description of available endpoints in application
  version: "0.7.2"

externalDocs:
  description: GPTS documentation
  url: https://icikowski.github.io/GPTS

components:
  schemas:
    Response:
      type: object
      description: Method-specific response specification
      properties:
        status:
          description: HTTP status code
          type: integer
          default: 200
        contentType:
          description: Value of "Content-Type" header
          type: string
          default: text/plain
        content:
          description: Content served as a response for request (text or base64-encoded binary)
          type: string
          default: ""
        headers:
          description: Map of headers added to the response for request
          type: object
          additionalProperties: 
            type: string
          default: null
    Route:
      type: object
      description: Declarative route configuration with specified responses (default and/or method-specific)
      properties:
        allowSubpaths:
          description: Determines whether subpaths should be covered by given definition
          type: boolean
          default: false
        default:
          description: Default response defined for given route
          $ref: '#/components/schemas/Response'
        get:
          description: Response for GET requests for given route
          $ref: '#/components/schemas/Response'
        post:
          description: Response for POST requests for given route
          $ref: '#/components/schemas/Response'
        put:
          description: Response for PUT requests for given route
          $ref: '#/components/schemas/Response'
        patch:
          description: Response for PATCH requests for given route
          $ref: '#/components/schemas/Response'
        delete:
          description: Response for DELETE requests for given route
          $ref: '#/components/schemas/Response'
    ErrorResponse:
      type: object
      description: Error response
      properties:
        status:
          description: HTTP response error code
          type: integer
        message:
          description: Short error summary
          type: string
        details:
          description: Error details
          type: string
      required:
        - status
        - message
    DefaultResponse:
      type: object
      description: Default response for paths without specific configuration
      properties:
        host:
          description: Host to which incoming request was sent
          type: string
        path:
          description: Path of incoming request
          type: string
        method:
          description: Method of incoming request
          type: string
        headers:
          description: Headers of incoming requests
          type: object
          additionalProperties:
            type: string
        queries:
          description: Queries of incoming request
          type: object
          additionalProperties:
            type: string
      required:
        - host
        - path
        - method
  examples:
    default_config:
      value:
          /hello:
            allowSubpaths: true
            default:
              status: 200
              contentType: application/json
              content: "{\"message\":\"Hello World!\"}"
              headers:
                "X-SentBy": "GPTS - General Purpose Test Service"
    extended_config:
      value:
        /page/favicon.png:
          get:
            contentType: image/png
            content: base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAA3NCSVQICAjb4U/gAAAACXBIWXMAAABvAAAAbwHxotxDAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAALdQTFRF//////8A//8A/9c8+883+9A3/9g7/9k8+c44+Mw2/9k6+Mw3+c43/9k798s198s2/tU698o2/9k798o29so1/9k7+c039cc19cc0PkNHQEVJQkdLXVtFd29DeHBDfHNEfnRDgnhDi39Cj4JCnIxBqpdArZlArppAsp1A1rk+6Mc88c488s8889A89MU09cg19dE898o2+Ms2+c43+tA4+9I4/NQ5/Nc7/dY7/dc7/dg7/tg6/9k74gqg4QAAABl0Uk5TAAECJkVGcICgr7O1tbW/wMHk5ujq9vv8/XpzYNYAAACySURBVBgZTcGJmoFgAIbRr6JozCCyzNhCdr+9GO/9X9ckzzOcowfH84PA9xw9WW5ILnRtZaxP/tUsSS4v95LkhLxpFeQBq3gDm3gF5w/5wOhnCtPvISR1BcCkO4d5dwKXtgJI0yWZZZpy6siH/p7cvs+hIQ9mY3LjWWK+5IT8RvEa1nF025mi5MJt0RsMeovr0ZQl2bU7sN2S7EzTVsYqtc7J5XQwpmzrqVCptzuNalGZP8XEJJiuHj/GAAAAAElFTkSuQmCC
        /page:
          get:
            contentType: text/html
            content: |
              <!DOCTYPE html>
              <html lang="pl">
                <head>
                  <title>Sample page</title>
                  <meta charset="utf-8" />
                  <link rel="icon" type="image/png" href="favicon.png" />
                </head>
                <body>
                  <h1>Hello, visitor!</h1>
                </body>
              </html>
        /contact:
          get:
            contentType: application/json
            content: |
              {
                "name": "John Doe",
                "email": "j.doe@example.com",
                "www": "https://example.com"
              }
        /:
          get:
            contentType: text/plain
            content: "This is default response"
    empty_config:
      value: []
paths:
  /config:
    get:
      summary: Retrieve current configuration
      tags:
        - Configuration
      responses:
        '200':
          description: List of route configuration entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
              examples:
                Default configuration:
                  $ref: '#/components/examples/default_config'
                Extended configuration:
                  $ref: '#/components/examples/extended_config'
                Empty configuration:
                  $ref: '#/components/examples/empty_config'
            text/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
              examples:
                Default configuration:
                  $ref: '#/components/examples/default_config'
                Extended configuration:
                  $ref: '#/components/examples/extended_config'
                Empty configuration:
                  $ref: '#/components/examples/empty_config'
    post:
      summary: Apply new configuration
      tags:
        - Configuration
      requestBody:
        description: List of route configuration entries
        content:
          application/json:
            schema: 
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Route'
            examples:
              Default configuration:
                $ref: '#/components/examples/default_config'
              Extended configuration:
                $ref: '#/components/examples/extended_config'
              Empty configuration:
                $ref: '#/components/examples/empty_config'
          text/yaml:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Route'
            examples:
              Default configuration:
                $ref: '#/components/examples/default_config'
              Extended configuration:
                $ref: '#/components/examples/extended_config'
              Empty configuration:
                $ref: '#/components/examples/empty_config'
      responses:
        '202':
          description: Configuration accepted
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 415
                message: wrong media type (accepting application/json or text/yaml)
        '400':
          description: Configuration parsing error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 400
                message: configuration can't be parsed
                details: some error from parser
  /{path}:
    get:
      summary: Request to an unconfigured route
      tags:
        - Defaults
      parameters: 
        - in: path
          name: path
          description: Unconfigured route path
          required: true
          allowEmptyValue: true
          schema:
            type: string
          style: simple
          example: a/b/c
      responses:
        '200':
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
              example:
                host: localhost
                path: /a/b/c
                method: GET
                headers:
                  "X-Some-Sent-Header": "some value"
                queries: {}
tags:
  - name: Configuration
    description: Always available configuration management endpoints; path may be changed to something different than "/config" using GPTS' configuration values
  - name: Defaults
    description: Responses for routes without configuration
